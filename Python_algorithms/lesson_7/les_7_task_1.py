# 1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив, заданный случайными числами
# на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
#
# Примечания:
#
# a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
#
# b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
# Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

import random

array = [random.randint(-100, 99) for _ in range(50)]


def sort_buble(array):
    i = 1
    len_ar = len(array)
    while i < len_ar:
        spam = 0
        for j in range(len_ar - i):
            if array[j] < array[j + 1]:
                array[j], array[j + 1] = array[j + 1], array[j]
                spam = 1
        if not spam:
            break
        i += 1

print(array)
sort_buble(array)
print(array)

# Улучшения:
# 1) Избежать дублирования обращения к длине массива, сохранить ее в переменную
# 2) Проверить, если при проходе внутреннего цикла элементы ни разу не поменялись местами, значит массив отсортирован,
# и дальнейшие проходы не нужны